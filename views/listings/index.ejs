<%- layout("/layouts/boilerplate") %>

    <style>
        #filters { display: contents; }
        .filter { text-align: center; margin-right: 2rem; margin-top: 1rem; opacity: 0.85; }
        .filter:hover { opacity: 1; cursor: pointer; }
        .filter p { font-size: 0.8rem; }
        /* Tablet view - hide less important filters */
        @media (max-width: 1024px) { #filters .filter:nth-child(7), #filters .filter:nth-child(8), #filters .filter:nth-child(9) { display: none; } }
        /* Mobile view - keep only first few */
        @media (max-width: 768px) { #filters .filter:nth-child(4), #filters .filter:nth-child(5), #filters .filter:nth-child(6), #filters .filter:nth-child(7) { display: none; } }
        /* Very small screens - show only All */
        @media (max-width: 480px) { #filters .filter:nth-child(n+2) { display: none; } }
        .tax-info { display: none; }
        .filter-link { text-decoration: none; color: var(--text-primary); }
        .filter, .filter i, .filter p { color: var(--text-primary); }
        .form-check-label { color: var(--text-primary); }
        [data-theme="dark"] #filters { background-color: var(--bg-primary); }
    </style>

    <div class="filters-bar">
      <div class="filters-scroll" id="filters">
        <a href="/listings" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-border-all"></i></div>
                <p>All</p>
            </div>
        </a>

        <a href="/listings?category=Trending" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-fire"></i></div>
                <p>Trending</p>
            </div>
        </a>
        <a href="/listings?category=Rooms" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-bed"></i></div>
                <p>Rooms</p>
            </div>
        </a>
        <a href="/listings?category=Iconic Cities" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-mountain-city"></i></div>
                <p>Iconic Cities</p>
            </div>
        </a>
        <a href="/listings?category=Mountains" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-mountain"></i></div>
                <p>Mountains</p>
            </div>
        </a>
        <a href="/listings?category=Castles" class="filter-link">
            <div class="filter">
                <div><i class="fa-brands fa-fort-awesome"></i></div>
                <p>Castles</p>
            </div>
        </a>
        <a href="/listings?category=Amazing Pools" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-person-swimming"></i></div>
                <p>Amazing Pools</p>
            </div>
        </a>
        <a href="/listings?category=Camping" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-campground"></i></div>
                <p>Camping</p>
            </div>
        </a>
        <a href="/listings?category=Farms" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-tractor"></i></div>
                <p>Farms</p>
            </div>
        </a>
        <a href="/listings?category=Arctic" class="filter-link">
            <div class="filter">
                <div><i class="fa-regular fa-snowflake"></i></div>
                <p>Arctic</p>
            </div>
        </a>
        <a href="/listings?category=5 Star rated" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-star"></i></div>
                <p>5 Star rated</p>
            </div>
        </a>
        <a href="/listings?category=Most loved" class="filter-link">
            <div class="filter">
                <div><i class="fa-solid fa-bookmark"></i></div>
                <p>Most loved</p>
            </div>
        </a>
      </div>

      <div class="filters-controls">
        <select id="sortSelect" class="sort-select" aria-label="Sort listings">
            <option value="">Sort: Recommended</option>
            <option value="price-asc">Price: Low to High</option>
            <option value="price-desc">Price: High to Low</option>
        </select>
        <button id="viewToggle" class="view-toggle" type="button"><i class="fa-solid fa-grip"></i> View</button>
        <label class="m-0 d-flex align-items-center gap-2" style="font-size:0.9rem;">
            <span>Max â‚¹</span>
            <input type="range" id="priceFilter" min="0" max="100000" value="100000" step="5000" />
            <span id="priceFilterValue">100000</span>
        </label>
        <div class="tax-toggle">
            <div class="form-check-reverse form-switch m-0">
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault">
                <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
            </div>
        </div>
      </div>
    </div>

    <!-- Cluster Map Section -->
    <div class="container mt-4 mb-4">
        <h4 class="mb-3">Explore Listings on Map</h4>
        <div class="map-wrapper">
            <button class="map-toggle" data-target="#cluster-map"><i class="fa-solid fa-expand"></i> Expand map</button>
            <div id="cluster-map" class="map-container is-large"></div>
        </div>
    </div>

    <div class="row row-cols-lg-3  row-cols-md-2 row-cols-sm-1 mt-3">
        <% for(let listing of allListings){ %>
            <div class="card col listing-card" style="position: relative;" data-price="<%= listing.price %>">
                <% if(currUser) { %>
                    <button class="wishlist-btn" data-listing-id="<%= listing._id %>" 
                            onclick="toggleWishlist(event, '<%= listing._id %>')" 
                            style="position: absolute; top: 1rem; right: 1rem; z-index: 10; background: white; border: none; border-radius: 50%; width: 40px; height: 40px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.2);">
                        <i class="fa-regular fa-heart" style="color: #fe424d; font-size: 1.2rem;"></i>
                    </button>
                <% } %>
                <a href="/listings/<%= listing._id %>" class="listing-link">
                    <img src="<%= listing.image.url%>" class="card-img-top" alt="listing_image" style="height:20rem">
                    <span class="category-chip"><i class="fa-solid fa-tag"></i><%= listing.category || 'Trending' %></span>
                    <div class="card-img-overlay"></div>
                    <div class="card-body">
                        <p class="card-text">
                            <b>
                                <%= listing.title %><br>
                            </b>
                            &#8377;<%=listing.price.toLocaleString("en-IN")%> / night <i class="tax-info">&nbsp;+18%
                                    GST</i><br>
                                <% if(listing.owner) { %>
                                    <small>Owner: <%= listing.owner.username %></small>
                                    <% } %>
                        </p>
                    </div>
                </a>
            </div>
        <% } %>
    </div>


    <script>
        let taxSwitch = document.getElementById("flexSwitchCheckDefault");
        taxSwitch.addEventListener("click", () => {
            let taxInfo = document.getElementsByClassName("tax-info");
            for (info of taxInfo) {
                if (info.style.display != "inline") {
                    info.style.display = "inline";
                } else {
                    info.style.display = "none";
                }
            }
        });

        // Wishlist toggle function
        async function toggleWishlist(event, listingId) {
            event.preventDefault();
            event.stopPropagation();
            
            const button = event.currentTarget;
            const icon = button.querySelector('i');
            
            try {
                const response = await fetch(`/wishlist/${listingId}/toggle`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    if (data.inWishlist) {
                        icon.classList.remove('fa-regular');
                        icon.classList.add('fa-solid');
                    } else {
                        icon.classList.remove('fa-solid');
                        icon.classList.add('fa-regular');
                    }
                }
            } catch (error) {
                console.error('Error toggling wishlist:', error);
            }
        }
        
        // Initialize cluster map with all listings
        window.addEventListener('load', function() {
            let allListingsData = <%- JSON.stringify(allListings) %>;
            console.log("Listings data:", allListingsData.length, "listings");
            
            // Check if Leaflet is loaded
            if (typeof L !== 'undefined') {
                console.log("Leaflet loaded, initializing map");
                initIndexMap(allListingsData);
            } else {
                console.error("Leaflet library not loaded");
            }
        });

        // Client-side sort by price
        (function(){
            const sortSelect = document.getElementById('sortSelect');
            const cardsRow = document.querySelector('.row.row-cols-lg-3');
            if (!sortSelect || !cardsRow) return;
            const getCards = () => Array.from(cardsRow.querySelectorAll('.listing-card'));
            sortSelect.addEventListener('change', () => {
                const val = sortSelect.value;
                if (!val) return; // recommended
                const cards = getCards();
                cards.sort((a,b)=>{
                    const pa = parseInt(a.getAttribute('data-price')||'0',10);
                    const pb = parseInt(b.getAttribute('data-price')||'0',10);
                    return val === 'price-asc' ? pa - pb : pb - pa;
                });
                cards.forEach(card=>cardsRow.appendChild(card));
            });
        })();

        // Toggle grid/list view
        (function(){
            const btn = document.getElementById('viewToggle');
            const grid = document.querySelector('.row.row-cols-lg-3');
            if (!btn || !grid) return;
            btn.addEventListener('click', ()=>{
                grid.classList.toggle('cards-list-view');
                btn.innerHTML = grid.classList.contains('cards-list-view') ? '<i class="fa-solid fa-list"></i> List' : '<i class="fa-solid fa-grip"></i> View';
            });
        })();

        // Price range filter (client-side)
        (function(){
            const slider = document.getElementById('priceFilter');
            const label = document.getElementById('priceFilterValue');
            const cardsRow = document.querySelector('.row.row-cols-lg-3');
            if (!slider || !label || !cardsRow) return;
            const cards = Array.from(cardsRow.querySelectorAll('.listing-card'));
            // Determine max price from DOM
            const prices = cards.map(c=>parseInt(c.getAttribute('data-price')||'0',10));
            const max = Math.max(1000, ...prices);
            slider.max = String(max);
            slider.value = String(max);
            label.textContent = max.toLocaleString('en-IN');
            const apply = ()=>{
                const cap = parseInt(slider.value,10);
                label.textContent = cap.toLocaleString('en-IN');
                cards.forEach(card=>{
                    const p = parseInt(card.getAttribute('data-price')||'0',10);
                    card.style.display = p <= cap ? '' : 'none';
                });
            };
            slider.addEventListener('input', apply);
        })();
    </script>